{"ast":null,"code":"import openNotification from \"../Helpers/Notification\";\nconst FormValidation = (name, value) => {\n  if (!value) {\n    return;\n  }\n  switch (name) {\n    case \"name\":\n      if (!/^[a-zA-Z ]*$/.test(value)) {\n        openNotification(\"error\", `${name} incorrect`, \"User Name mast be only letters and spaces\");\n        return {\n          [name]: true\n        };\n      }\n      return {\n        [name]: false\n      };\n    case \"phone\":\n      if (!/^\\d{10}$/.test(value)) {\n        openNotification(\"error\", `${name} incorrect`, \"Phone Number mast be  10 digit number only\");\n        return {\n          [name]: true\n        };\n      }\n      return {\n        [name]: false\n      };\n    case \"email\":\n      const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!emailRegex.test(value)) {\n        openNotification(\"error\", `${name} incorrect`, \"Enter a validation email address\");\n        return {\n          [name]: true\n        };\n      }\n      return {\n        [name]: false\n      };\n    case \"password\":\n      const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\n      if (!passwordRegex.test(value)) {\n        openNotification(\"error\", `${name} incorrect`, \"Password must contain minimum eight characters, at least one letter, one number and one special character:\");\n        return {\n          [name]: true\n        };\n      }\n      return {\n        [name]: false\n      };\n    default:\n      break;\n  }\n};\n_c = FormValidation;\nexport default FormValidation;\nvar _c;\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"names":["openNotification","FormValidation","name","value","test","emailRegex","passwordRegex","_c","$RefreshReg$"],"sources":["C:/Users/pradn/OneDrive/Desktop/FARMEASY/client/src/Validation/FormValidation.js"],"sourcesContent":["import openNotification from \"../Helpers/Notification\";\r\n\r\nconst FormValidation = (name, value) => {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  switch (name) {\r\n    case \"name\":\r\n      if (!/^[a-zA-Z ]*$/.test(value)) {\r\n        openNotification(\r\n          \"error\",\r\n          `${name} incorrect`,\r\n          \"User Name mast be only letters and spaces\"\r\n        );\r\n        return { [name]: true };\r\n      }\r\n      return { [name]: false };\r\n\r\n    case \"phone\":\r\n      if (!/^\\d{10}$/.test(value)) {\r\n        openNotification(\r\n          \"error\",\r\n          `${name} incorrect`,\r\n          \"Phone Number mast be  10 digit number only\"\r\n        );\r\n        return { [name]: true };\r\n      }\r\n      return { [name]: false };\r\n\r\n    case \"email\":\r\n      const emailRegex =\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      if (!emailRegex.test(value)) {\r\n        openNotification(\r\n          \"error\",\r\n          `${name} incorrect`,\r\n          \"Enter a validation email address\"\r\n        );\r\n        return { [name]: true };\r\n      }\r\n      return { [name]: false };\r\n\r\n    case \"password\":\r\n      const passwordRegex =\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n      if (!passwordRegex.test(value)) {\r\n        openNotification(\r\n          \"error\",\r\n          `${name} incorrect`,\r\n          \"Password must contain minimum eight characters, at least one letter, one number and one special character:\"\r\n        );\r\n        return { [name]: true };\r\n      }\r\n      return { [name]: false };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default FormValidation;\r\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,yBAAyB;AAEtD,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EACtC,IAAI,CAACA,KAAK,EAAE;IACV;EACF;EAEA,QAAQD,IAAI;IACV,KAAK,MAAM;MACT,IAAI,CAAC,cAAc,CAACE,IAAI,CAACD,KAAK,CAAC,EAAE;QAC/BH,gBAAgB,CACd,OAAO,EACN,GAAEE,IAAK,YAAW,EACnB,2CAA2C,CAC5C;QACD,OAAO;UAAE,CAACA,IAAI,GAAG;QAAK,CAAC;MACzB;MACA,OAAO;QAAE,CAACA,IAAI,GAAG;MAAM,CAAC;IAE1B,KAAK,OAAO;MACV,IAAI,CAAC,UAAU,CAACE,IAAI,CAACD,KAAK,CAAC,EAAE;QAC3BH,gBAAgB,CACd,OAAO,EACN,GAAEE,IAAK,YAAW,EACnB,4CAA4C,CAC7C;QACD,OAAO;UAAE,CAACA,IAAI,GAAG;QAAK,CAAC;MACzB;MACA,OAAO;QAAE,CAACA,IAAI,GAAG;MAAM,CAAC;IAE1B,KAAK,OAAO;MACV,MAAMG,UAAU,GACd,uJAAuJ;MACzJ,IAAI,CAACA,UAAU,CAACD,IAAI,CAACD,KAAK,CAAC,EAAE;QAC3BH,gBAAgB,CACd,OAAO,EACN,GAAEE,IAAK,YAAW,EACnB,kCAAkC,CACnC;QACD,OAAO;UAAE,CAACA,IAAI,GAAG;QAAK,CAAC;MACzB;MACA,OAAO;QAAE,CAACA,IAAI,GAAG;MAAM,CAAC;IAE1B,KAAK,UAAU;MACb,MAAMI,aAAa,GACjB,gEAAgE;MAClE,IAAI,CAACA,aAAa,CAACF,IAAI,CAACD,KAAK,CAAC,EAAE;QAC9BH,gBAAgB,CACd,OAAO,EACN,GAAEE,IAAK,YAAW,EACnB,4GAA4G,CAC7G;QACD,OAAO;UAAE,CAACA,IAAI,GAAG;QAAK,CAAC;MACzB;MACA,OAAO;QAAE,CAACA,IAAI,GAAG;MAAM,CAAC;IAE1B;MACE;EAAM;AAEZ,CAAC;AAACK,EAAA,GAzDIN,cAAc;AA2DpB,eAAeA,cAAc;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}